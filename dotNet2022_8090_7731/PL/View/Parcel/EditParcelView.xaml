<UserControl x:Class="PL.View.EditParcelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:BO="clr-namespace:BO;assembly=BL"
             xmlns:local="clr-namespace:PL.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
               xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             xmlns:Converters="clr-namespace:PL.Converters"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Margin" Value="0,15" />
            <Setter Property="Width" Value="200" />
            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource  MaterialDesignSubtitle2TextBlock}">
            <Setter Property="Margin" Value="25,0,0,0"/>
        </Style>

        <Style x:Key="Header" TargetType="TextBlock"  BasedOn="{StaticResource MaterialDesignHeadline6TextBlock}">
            <Setter Property="Foreground" Value="#737373"/>
            <Setter Property="Margin" Value="15,0,0,0"/>
        </Style>

        <Style x:Key="Link" TargetType="TextBlock"  BasedOn="{StaticResource MaterialDesignSubtitle2TextBlock}">
            <Setter Property="TextBlock.TextDecorations" Value="Baseline"/>
            <Setter Property="TextBlock.TextDecorations" Value="Baseline"/>
            <Setter Property="TextBlock.Foreground" Value="CornflowerBlue"/>
            <Setter Property="TextBlock.Cursor" Value="Hand"/>
            <Setter Property="TextBlock.FontStyle" Value="Italic"/>
            <Setter Property="Margin" Value="15,0,0,0"/>
        </Style>
        
        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton }">
            <Setter Property="Margin" Value="0,15" />
            <Setter Property="Width" Value="500" />
            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0,15" />
        </Style>

        <ObjectDataProvider x:Key="WeightCategoriesEnum" MethodName="GetValues"
                        ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="BO:WeightCategories"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <ObjectDataProvider x:Key="PriorityEnum" MethodName="GetValues"
                        ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="BO:Priority"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Converters:ContentByDroneInParcelPickOrDeliveryParcelConverter x:Key="ContentByDroneInParcelPickOrDeliveryParcelConverter"/>
    </UserControl.Resources>

    
    <StackPanel>
        <DockPanel  Margin="20" >
            <TextBlock Text="Id  \" Style="{StaticResource Header}"/>
            <TextBlock Text="{Binding Parcel.Id}" Style="{StaticResource Header}"/>
        </DockPanel>
        
        <DockPanel  >
            <StackPanel Width="200"/>
                
            <StackPanel >
                <TextBlock Text="Sender" 
                                Style="{StaticResource Header}"/>
                <TextBlock Text="{Binding Parcel.Sender.Id}"/>
                <TextBlock Text="{Binding Parcel.Sender.Name}"/>
                <TextBlock Text="See more" 
                                Style="{StaticResource Link}">
                    <TextBlock.InputBindings>
                        <MouseBinding Command="{Binding EditCustomerCommand}"
                                    MouseAction="LeftClick"
                                    CommandParameter="{Binding Parcel.Sender.Id}"/>
                    </TextBlock.InputBindings>
                </TextBlock>
            </StackPanel>
                
            <StackPanel Width="200"/>
                
            <StackPanel>
                <TextBlock Text="Getter" Style="{StaticResource Header}"/>
                <TextBlock Text="{Binding Parcel.Getter.Id}"/>
                <TextBlock Text="{Binding Parcel.Getter.Name}"/>
                <TextBlock Text="See more" 
                            Style="{StaticResource Link}">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding EditCustomerCommand}"
                                        MouseAction="LeftClick"
                                        CommandParameter="{Binding Parcel.Getter.Id}"/>
                        </TextBlock.InputBindings>
                </TextBlock>
            </StackPanel>
            
            <StackPanel Width="200"/>
        </DockPanel>

        <!--<TextBox Text="{Binding Parcel.Weight}"  
                 materialDesign:HintAssist.Hint="Weight"
                 IsEnabled="False"/>

        <TextBox Text="{Binding Parcel.MPriority}"
                 materialDesign:HintAssist.Hint="Priority"
                 VerticalAlignment="Center"
                 IsEnabled="False"/>-->
        
        <!--<ComboBox Name="listComboBox" SelectionChanged="listComboBox_SelectionChanged" SelectedIndex="0" SelectedValuePath="Content" Margin="5,0" Height="35" Width="150" VerticalAlignment="Center" HorizontalAlignment="Left">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ListTypeComboSelectionChangedCmd}" CommandParameter="{Binding ElementName=listComboBox, Path=SelectedValue}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ComboBoxItem Content="ItemOne" />
            <ComboBoxItem Content="ItemTwo" />
            <ComboBoxItem Content="ItemThree" />
        </ComboBox>-->
        
        <ComboBox ItemsSource="{Binding Source={StaticResource WeightCategoriesEnum}}"
                  SelectedItem="{Binding Parcel.Weight}"
                  materialDesign:HintAssist.Hint="Weight"/>
            <!--IsEnabled="False"-->

        <ComboBox ItemsSource="{Binding Source={StaticResource PriorityEnum}}"
                  SelectedItem="{Binding Parcel.MPriority}"
                  materialDesign:HintAssist.Hint="Priority"/>
                  <!--IsEnabled="False"-->

        <TextBlock Text="See carring drone"
                   Style="{StaticResource Link}">
            <TextBlock.InputBindings>
                <MouseBinding Command="{Binding OpenDroneWindowCommand}"
                              MouseAction="LeftClick"
                              CommandParameter="{Binding Parcel.DInParcel}"/>
            </TextBlock.InputBindings>
        </TextBlock>
        <!--<Expander Header="Drone In Parcal">
            <StackPanel>
            <TextBox Text="{Binding Parcel.DInParcel.Id}" materialDesign:HintAssist.Hint="Drone In Parcel"
                  Style="{StaticResource MaterialDesignFloatingHintTextBox}"  
                 VerticalAlignment="Center"
                 IsEnabled="False"/>
            <TextBox Text="{Binding Parcel.DInParcel.BatteryStatus}" materialDesign:HintAssist.Hint="Drone In Parcel-Battery Status"
                  Style="{StaticResource MaterialDesignFloatingHintTextBox}"  
                 VerticalAlignment="Center"
                 IsEnabled="False"/>
            <TextBox Text="{Binding Parcel.DInParcel.CurrLocation.Longitude}" materialDesign:HintAssist.Hint="Drone In Parcel-Longitude"
                  Style="{StaticResource MaterialDesignFloatingHintTextBox}"  
                 VerticalAlignment="Center"
                 IsEnabled="False"/>
                <TextBox Text="{Binding Parcel.DInParcel.CurrLocation.Latitude}" materialDesign:HintAssist.Hint="Drone In Parcel-Latitude"
                  Style="{StaticResource MaterialDesignFloatingHintTextBox}"  
                 VerticalAlignment="Center"
                 IsEnabled="False"/>
            </StackPanel>
        </Expander>-->

        <TextBox Text="{Binding Parcel.MakingParcel}" 
                 materialDesign:HintAssist.Hint="Making Parcel"
                 IsEnabled="False"/>
        
        <TextBox Text="{Binding Parcel.BelongParcel}"
                 materialDesign:HintAssist.Hint="Belong Parcel"
                 IsEnabled="False"/>
        
        <TextBox Text="{Binding Parcel.PickingUp}" 
                 materialDesign:HintAssist.Hint="Picking Up Parcel"
                 IsEnabled="False"/>

        <TextBox Text="{Binding Parcel.Arrival}" 
                 materialDesign:HintAssist.Hint="Arrival Parcel"
                 IsEnabled="False"/>

        <Button Content="Update"
                 Command="{Binding UpdateParcelCommand}"/>

        <Button Content="Delete"
                Command="{Binding DeleteParcelCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
        <Button Content="{Binding Parcel ,Converter={StaticResource ContentByDroneInParcelPickOrDeliveryParcelConverter}}"
                Command="{Binding CollectAndDeliverPackageCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>

        
        <Button Content="close" 
                Command="{Binding CloseWindowCommand }"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
    </StackPanel>
</UserControl>
