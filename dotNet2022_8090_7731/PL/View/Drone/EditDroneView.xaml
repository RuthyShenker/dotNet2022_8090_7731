<UserControl x:Class="PL.View.EditDroneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:BO="clr-namespace:BO;assembly=BL"
             xmlns:PO="clr-namespace:PO"
             xmlns:Converters="clr-namespace:PL.Converters"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Converters:StatusToBGColorConverter x:Key="StatusToBGColorConverter"/>
        <Converters:BatteryToColorConverter x:Key="batteryToColorConverter"/>
        <Converters:BatteryToProgressBarConverter x:Key="batteryToProgressBarConverter"/>
        <Converters:ContentByStatusOfSimulatorConverter x:Key="ContentByStatusOfSimulatorConverter"/>

        <!--<Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0,15" />
        </Style>-->

        <ObjectDataProvider x:Key="WeightCategoriesEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="PO:WeightCategories"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="DroneStatusEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="PO:DroneStatus"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Converters:DroneStatusToVisibilityConverter x:Key="DroneStatusToVisibilityConverter"/>
        <Converters:ContentByDroneStatusConverter x:Key="ContentByDroneStatusConverter"/>
        <Converters:HasAllTextConverter x:Key="HasAllTextConverter"/>
        <Converters:ContentByDroneStatusBelongOrPickOrDeliveryParcelConverter x:Key="ContentByDroneStatusBelongOrPickOrDeliveryParcelConverter"/>
        <Converters:VisibilityByDroneToBelongOrPickOrArrivalParcelConverter x:Key="VisibilityByDroneToBelongOrPickOrArrivalParcelConverter"/>
        <Converters:ParcelInTransferVisibilityConverter x:Key="ParcelInTransferVisibilityConverter"/>
    </UserControl.Resources>

    <StackPanel ScrollViewer.VerticalScrollBarVisibility="Auto">

        <TextBox Text="{Binding Drone.Id, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource Edit}"
                 IsEnabled="False"  
                 materialDesign:HintAssist.Hint="Id" />

        <TextBox Text="{Binding Drone.BatteryStatus, UpdateSourceTrigger=PropertyChanged}" 
                 Style="{StaticResource Edit}"
                 materialDesign:HintAssist.Hint="Battery" 
                 IsEnabled="False" />

        <TextBlock Text = "MaxWeight:" HorizontalAlignment="Center"/>

        <ComboBox ItemsSource="{Binding Source={StaticResource WeightCategoriesEnum}}" 
                  SelectedItem="{Binding Drone.Weight}"  
                  materialDesign:HintAssist.Hint="MaxWeight" 
                  IsEnabled="False" />

        <TextBox Text="{Binding Drone.Model, 
                    UpdateSourceTrigger=PropertyChanged, 
                    ValidatesOnDataErrors=true,
                    NotifyOnValidationError=true}"
                 Style="{StaticResource Edit}"
                 materialDesign:HintAssist.Hint="Model" />

        <TextBlock Text = "Status:" HorizontalAlignment="Center" />
        <ComboBox ItemsSource="{Binding Source={StaticResource DroneStatusEnum}}" 
                  SelectedItem="{Binding Drone.Status, UpdateSourceTrigger=PropertyChanged}" 
                  materialDesign:HintAssist.Hint="Status"
                  IsEnabled="False"/>

        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                     Value="0"
                     IsIndeterminate="{Binding Drone.SimulatorStatus}" />

        <TextBox Text = "{Binding Drone.Location, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                 Style="{StaticResource Edit}"
                 materialDesign:HintAssist.Hint="Location"
                 IsEnabled="False" MinWidth="420"/>

        <Button Style="{StaticResource MaterialDesignFlatButton}"
                HorizontalAlignment="Center"
                Content="See delivered parcel"
                Command="{Binding OpenParcelWindowCommand}" 
                CommandParameter="{Binding Drone.ParcelInTransfer}" >
        </Button>

        <Button Content = "Update Model:" 
                Command="{Binding UpdateModelOfDroneCommand }"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>

        <Button Visibility="{Binding Drone.Status, Converter={StaticResource DroneStatusToVisibilityConverter}}" 
                Height="50"
                Content="{Binding Drone.Status, Converter={StaticResource ContentByDroneStatusConverter}}"
                Command="{Binding ChargeDroneCommand}" />

        <Button Command="{Binding AssignParcelToDroneCommand}"
                Visibility="{Binding Drone, Converter={StaticResource VisibilityByDroneToBelongOrPickOrArrivalParcelConverter }}" 
                Content="{Binding Drone, Converter={StaticResource ContentByDroneStatusBelongOrPickOrDeliveryParcelConverter}}" />

        <Button Content="close" 
                Command="{Binding CloseWindowCommand }"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>

        <Button Content="Delete"
                Command="{Binding DeleteDroneCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>

        <!-- Simulator -->
        <Button Content="{Binding Drone, Converter={StaticResource ContentByStatusOfSimulatorConverter}}"
                Command="{Binding StartOrStopSimulatorCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}" />

        <ProgressBar Name="BatteryProgressBar" 
                     Value="{Binding Drone.BatteryStatus,
                     Converter={StaticResource batteryToProgressBarConverter}}"
                     Width="Auto" Foreground="{Binding Drone.BatteryStatus, 
                     Converter={StaticResource batteryToColorConverter}}"/>

        <TextBlock Text="{Binding Drone.Info, UpdateSourceTrigger=PropertyChanged}"
                   materialDesign:HintAssist.Hint="Distance"
                   IsEnabled="False"/>

    </StackPanel>

</UserControl>